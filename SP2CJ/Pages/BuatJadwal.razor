@page "/BuatJadwal"
@using Models

<PageTitle>Buat Jadwal</PageTitle>
<h1>Buat Jadwal</h1>

<div class="block column">
    <EditForm Model="@newJadwal" OnValidSubmit="@HandleInput">
        <div class="control">
            <label class="is-flex is-justify-content-space-between">
                Tanggal:
            </label>
            <DatePicker  @bind-Date="@newJadwal.tanggal">
            </DatePicker>
        </div>
        <div class="control">
            <label class="is-flex is-justify-content-space-between">
                Jenis Ibadah:
            </label>
            <Select @bind-SelectedValue="@newJadwal.JenisJadwal">
                @foreach (var list in listIbadah)
                {
                    <SelectItem Value="list.itemName">@list.itemName</SelectItem>
                }
            </Select>
        </div>
        <div class="control">
            <label class="is-flex is-justify-content-space-between">
                Tema:
            </label>
            <InputText @attributes="InputAttributes" @bind-Value="@newJadwal.Tema"/>
        </div>
        @foreach()
        {
            <div class="control">
                <label class="is-flex is-justify-content-space-between">
                    Tema:
                </label>
                <InputText @attributes="InputAttributes" @bind-Value="@newJadwal.Tema"/>
            </div>
        }
        
    </EditForm>
    
    

</div>


@code {
    Jadwal newJadwal = new();
    List<RefMasterItem> listIbadah = new();
    List<RefMasterItem> listRoleType = new();


    protected override void OnInitialized()
    {
        listIbadah = FService.GetRefMasterItems("IBDH").Invoke(CancellationToken.None).ItemList;
        var now = DateTime.Now;
        newJadwal.tanggal = now.AddDays(7 - (int) now.DayOfWeek);
        var a = "string";
    }

    private void HandleInput()
    {
        newJadwal = new Jadwal();
    }


}
