@page "/LihatJadwal"
@using SP2CJ.Services



<div class="container block">
    <div class="block columns">
        <div class="column control">
            <label class=" is-justify-content-space-between">
                Tanggal awal:
            </label>
            <DatePicker TValue="DateTime" DateChanged="@Datechangedevent" Date="@Range1">
            </DatePicker>
        </div>
        <div class="column control">
            <label class=" is-justify-content-space-between">
                Tanggal akhir:
            </label>
            <DatePicker TValue="DateTime" DateChanged="@Datechangedevent2" Date="@Range2">
            </DatePicker>
        </div>
    </div>
    <div class="block table-container">
        <table class="table is-striped is-narrow is-hoverable is-fullwidth">
            <tr>
                @for (int i = -1; i < lihaJadwals.Count(); i++)
                {
                    @if (i == -1)
                    {
                        <th>Tanggal</th>
                    }
                    else
                    {<th>@lihaJadwals[i].tanggal.ToString("dddd, dd MMMM yyyy"): @lihaJadwals[i].JenisJadwal</th>}
                }
            </tr >
            @foreach (string key in maxDict.Keys)
            {
                @for (int b = 0; b < maxDict[key]; b++)
                {
                    <tr>
                        @for (int i = -1; i < lihaJadwals.Count(); i++)
                        {
                            @if (i == -1 && b == 0)
                            {
                                @if (b == 0)
                                {
                                    <th>@key</th>
                                }
                                else
                                {
                                    <th></th>
                                }
                            }
                            else
                            {
                                <td>
                                    @{
                                        string namaPelayan = string.Empty;
                                        try
                                        {
                                            namaPelayan = lihaJadwals[i].PelayansJadwal[key][b].Jemaat.FullName + ", " + lihaJadwals[i].PelayansJadwal[key][b].Role.RoleName;
                                        }
                                        catch
                                        {
                                        }
                                    }
                                    @namaPelayan</td>
                            }
                        }
                    </tr>
                }
            }
        </table>
    </div>
</div>

@code {
    List<Jadwal> lihaJadwals = new List<Jadwal>();
    DateTime Range1;
    DateTime Range2;
    CrudMongo cm = new CrudMongo();
    Dictionary<string, int> maxDict = new();
    protected override void OnInitialized()
    {
        lihaJadwals = cm.GetJadwals(Range1, Range2).OrderBy(a => a.tanggal).ToList();
        Range1 = DateTime.Now;
        Range2 = DateTime.Now.AddDays(14);
        maxDict = getMax(lihaJadwals);

    }

    void Datechangedevent(DateTime date)
    {
        Range1 = date;
        lihaJadwals = cm.GetJadwals(Range1, Range2).OrderBy(a => a.tanggal).ToList();
        maxDict = getMax(lihaJadwals);
    }
    void Datechangedevent2(DateTime date)
    {
        Range2 = date;
        lihaJadwals = cm.GetJadwals(Range1, Range2).OrderBy(a => a.tanggal).ToList();
        maxDict = getMax(lihaJadwals);
    }

    Dictionary<string, int> getMax(List<Jadwal> jadwal)
    {
        Dictionary<string, int> returned = new();
        foreach (string key in jadwal.SelectMany(a => a.PelayansJadwal.Keys))
        {
            returned[key] = jadwal.Select(a => a.PelayansJadwal[key].Count).Max();
        }
        return returned;
    }


}
