@page "/LihatJadwal/{bulanint:int?}"
@using SP2CJ.Services



<div class="container block">
    <div class="block columns">
        <div class="column control">
            <Select TValue="String" Class="select is-flex is-full is-vcentered" SelectedValue="selectedBulan" SelectedValueChanged="@OnSelectedValueChanged">
                @foreach (var item in ListBulan)
                {
                    <SelectItem Value="@item">@item</SelectItem>
                }
            </Select>
            <Select TValue="String" Class="select is-flex is-full is-vcentered" SelectedValue="JenisJadwal" SelectedValueChanged="@OnSelectedValueChangedJenis">
                @foreach (var item in jenisJadwals)
                {
                    <SelectItem Value="@item.itemName">@item.itemName</SelectItem>
                }
            </Select>
        </div>
        @* <div class="column control">
        <label class=" is-justify-content-space-between">
        Tanggal awal:
        </label>
        <DatePicker TValue="DateTime" DateChanged="@Datechangedevent" Date="@Range1">
        </DatePicker>
        </div>
        <div class="column control">
        <label class=" is-justify-content-space-between">
        Tanggal akhir:
        </label>
        <DatePicker TValue="DateTime" DateChanged="@Datechangedevent2" Date="@Range2">
        </DatePicker>
        </div>*@
    </div>
    <div class="block table-container">
        <table class="table is-striped is-narrow is-hoverable is-fullwidth">
            <tr>
                @for (int i = -1; i < lihaJadwals.Count(); i++)
                {
                    @if (i == -1)
                    {
                        <th>Tanggal</th>
                    }
                    else
                    {
                        <th>@lihaJadwals[i].tanggal.ToString("dddd, dd MMMM yyyy"): @lihaJadwals[i].JenisJadwal</th>
                    }
                }
            </tr>
            @foreach (string key in maxDict.Keys)
            {
                @for (int b = 0; b < maxDict[key]; b++)
                {
                    <tr>
                        @for (int i = -1; i < lihaJadwals.Count(); i++)
                        {
                            @if (i == -1 && b == 0)
                            {
                                @if (b == 0)
                                {
                                    <th>@listRefRole.FirstOrDefault(a => a.RoleCode == key)!.RoleName</th>
                                }
                                else
                                {
                                    <th></th>
                                }
                            }
                            else
                            {
                                <td>
                                    @{
                                        string namaPelayan = string.Empty;
                                        try
                                        {
                                            namaPelayan = lihaJadwals[i].PelayansJadwal[key][b].Jemaat.FullName;
                                        }
                                        catch
                                        {
                                        }
                                    }
                                    @namaPelayan
                                </td>
                            }
                        }
                    </tr>
                }
            }
        </table>
    </div>
</div>

@code {

    List<Jadwal> lihaJadwals = new List<Jadwal>();
    DateTime Range1;
    DateTime Range2;
    CrudMongo cm = new CrudMongo();
    Dictionary<string, int> maxDict = new();
    List<string> ListBulan;
    string selectedBulan;
    List<RefRole> listRefRole = new();
    FSMerged fs = new();
    [Parameter]
    public int Bulanint { get; set; } = 1;
    [Parameter]
    public string JenisJadwal { get; set; } = "All";

    List<RefMasterItem> jenisJadwals = new List<RefMasterItem>();

    protected override void OnInitialized()
    {
        Range1 = DateTime.Now;
        Range2 = DateTime.Now.AddDays(14);
        maxDict = getMax(lihaJadwals);
        ListBulan = cm.MonthList;
        listRefRole = cm.GetRefRoles();
        jenisJadwals.Add(RefMasterItem.AllRefMaster);
        jenisJadwals = jenisJadwals.Concat(fs.GetRefMasterItems("IBDH").ItemList).ToList();
        JenisJadwal = "All";
        Bulanint = DateTime.Now.Month;
        selectedBulan = ListBulan[Bulanint];
        lihaJadwals = cm.GetJadwalsByBulan(selectedBulan, JenisJadwal).OrderBy(a => a.tanggal).ToList();
        maxDict = getMax(lihaJadwals);
    }

    //void Datechangedevent(DateTime date)
    //{
    //    Range1 = date;
    //    lihaJadwals = cm.GetJadwals(Range1, Range2).OrderBy(a => a.tanggal).ToList();
    //    maxDict = getMax(lihaJadwals);
    //}
    //void Datechangedevent2(DateTime date)
    //{
    //    Range2 = date;
    //    lihaJadwals = cm.GetJadwals(Range1, Range2).OrderBy(a => a.tanggal).ToList();
    //    maxDict = getMax(lihaJadwals);
    //}

    Dictionary<string, int> getMax(List<Jadwal> jadwal)
    {
        Dictionary<string, int> returned = new();

        foreach (string key in listRefRole.Where(luar => jadwal.SelectMany(a => a.PelayansJadwal.Keys).Any(x => x == luar.RoleCode)).Select(luarr => luarr.RoleCode))
        {
            returned[key] = jadwal.Select(a => a.PelayansJadwal[key].Count).Max();
        }


        return returned;
    }
    Task OnSelectedValueChanged(string value)
    {
        selectedBulan = value;

        lihaJadwals = cm.GetJadwalsByBulan(selectedBulan, JenisJadwal).OrderBy(a => a.tanggal).ToList();
        maxDict = getMax(lihaJadwals);

        return Task.CompletedTask;
    }
    Task OnSelectedValueChangedJenis(string value)
    {
        JenisJadwal = value;

        lihaJadwals = cm.GetJadwalsByBulan(selectedBulan, JenisJadwal).OrderBy(a => a.tanggal).ToList();
        maxDict = getMax(lihaJadwals);

        return Task.CompletedTask;
    }

}
