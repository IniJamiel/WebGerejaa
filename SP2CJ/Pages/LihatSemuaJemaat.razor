@page "/editJemaat"
@using SP2CJ.Services
@using Microsoft.AspNetCore.Components
@using Models
<h3>Edit Dan Lihat Semua Jemaat</h3>
@if (@EditorVisible)
{
    <div class="columns" style="visibility: @EditorVisible">
        <div class="block is-one-third column">
            <h1>Insert Data Jemaat</h1>
            <div class="block align-content is-flex is-vcentered">
                <PageTitle>Jemaat</PageTitle>
                <EditForm Model="@editJemaat" OnValidSubmit="@handleInput">
                    <DataAnnotationsValidator/>
                    <Blazorise.ValidationSummary/>
                    <div class="control columns block">
                        <div class="column">
                            <div class="control">
                                <label class="is-flex is-justify-content-space-between">
                                    Nama:
                                </label>
                                <InputText @attributes="InputAttributes" @bind-Value="editJemaat.Name"/>
                            </div>
                            <div class="control">
                                <label class="is-flex is-justify-content-space-between">
                                    Nama Lengkap:
                                </label>
                                <InputText @attributes="InputAttributes" @bind-Value="editJemaat.FullName"/>
                            </div>
                            <div class="control">
                                <label class="is-flex is-justify-content-space-between">
                                    Nomor HandPhone:
                                </label>
                                <InputText @attributes="InputAttributes" @bind-Value="editJemaat.nomorHandphone"/>
                            </div>
                            <div class="control">
                                <label class="is-flex is-justify-content-space-between">
                                    ID Line:
                                </label>
                                <InputText @attributes="InputAttributes" @bind-Value="editJemaat.idLine"/>
                            </div>
                        </div>
                        <div class="column">
                            <div class="control">
                                <label class="is-flex is-justify-content-space-between">
                                    Filter Pelayanan:
                                </label>
                                <input type="text" @bind:event="oninput" @onkeyup="@FilterName" @attributes="InputAttributes" @bind="filterRoleName"/>
                            </div>
                            <div class="control is-vcentered container">
                                <label class=" is-vcentered block is-justify-content-space-between">
                                    Filter Jenis Pelayanan
                                </label>
                                <Select TValue="String" Class="select is-flex is-full is-vcentered" SelectedValueChanged="@OnSelectedValueChanged" SelectedValue="filterRoleType">
                                    <SelectItem Value="All">Pilih Satu</SelectItem>
                                    @foreach (var item in ListKlasifikasi)
                                    {
                                        <SelectItem Value="@item.itemCode">@item.itemName</SelectItem>
                                    }
                                </Select>
                            </div >
                        </div>
                    </div>

                    <button type="submit" class="button is-pulled-right is-primary">Simpan</button>
                </EditForm>
            </div>
        </div>
        <Div class="column table-container">
            <DataGrid TItem="RefRole"
                      Data="Filtered"
                      Responsive
                      @bind-PageSize="@tableLimit"
                      CommandMode="DataGridCommandMode.ButtonRow"
                      SelectionMode="DataGridSelectionMode.Multiple"
                      @bind-SelectedRows="SelectedRoles"
                      Class="table is-striped is-narrow is-hoverable"
                      FixedHeader
                      FixedHeaderDataGridMaxHeight="40vh"
                      HeaderRowStyling="@(new DataGridRowStyling { Class = "has-background-primary" })">
                <DataGridColumn Field="@nameof(RefRole.RoleName)" Caption="Pelayanan" Editable="true"></DataGridColumn>
                <DataGridColumn Field="@nameof(RefRole.TypeName)" Caption="Jenis Pelayanan" Editable="true"></DataGridColumn>
            </DataGrid>
        </Div>
    </div>
}
    <Div class="table-container block">
        <table class="table-hover table">
            <thead>
            <tr>
                <th>
                    Nama
                </th>
                <th>
                    Nama Lengkap
                </th>
                <th>
                    Nomor Handphone
                </th>
                <th>
                    ID Line
                </th>
                <th>
                    Pelayanan
                </th>
                @if (!EditorVisible)
                {
                    <th>
                        Edit
                    </th>
                    <th>
                        Delete
                    </th>
                }
            </tr>
            </thead>
            <tbody>
            @foreach (var jemaat in Jemaats)
            {
                <tr>
                    <td>
                        @jemaat.Name
                    </td>
                    <td>
                        @jemaat.FullName
                    </td>
                    <td>
                        @jemaat.nomorHandphone
                    </td>
                    <td>
                        @jemaat.idLine
                    </td>
                    <td>
                        <div class="dropdown is-hoverable">
                            <div class="dropdown-trigger">
                                <button class="button" aria-haspopup="true" aria-controls="dropdown-menu3">
                                    <span>Lihat Pelayanan</span>
                                    <span class="icon is-small">
                                        <i class="fas fa-angle-down" aria-hidden="true"></i>
                                    </span>
                                </button>
                            </div>
                            <div class="dropdown-menu">
                                <div class="dropdown-content" style="position: fixed">
                                    @foreach (var role in jemaat.Roles)
                                    {
                                        <a class="dropdown-item">
                                            @role.RoleName
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </td>
                    @if (!EditorVisible)
                    {
                        <td>
                            <button @onclick="@(a => Edit(jemaat))" class="button is-secondary">Edit
                            </button>
                        </td>
                    }
                    <td>
                        <button @onclick="@(a => Delete(jemaat))" class="button is-danger">Delete
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </Div>

@code {
    CrudMongo cm = new();
    List<Jemaat> Jemaats = new();
    bool EditorVisible = false;
    Jemaat editJemaat = new Jemaat();
    List<RefRole> Filtered = new List<RefRole>();
    List<RefMasterItem> ListKlasifikasi = new List<RefMasterItem>();
    string filterRoleName = string.Empty;
    string filterRoleType = "All";
    int tableLimit = 50;
    static string All = "All";
    public List<RefRole> GridSelect = new List<RefRole>();

    Dictionary<string, object> InputAttributes { get; set; } =
        new()
        {
            { "class", "input" }
        };

    Task OnSelectedValueChanged( string roleCode)
    {
        Filtered = roleCode == All ?  GridSelect : SelectedRoles.Concat(GridSelect.Where(a => a.RoleType.itemCode != null && a.RoleType.itemCode.Equals(roleCode))).Distinct().ToList();
        return Task.CompletedTask;
    }

    List<RefRole> SelectedRoles
    {
        set => editJemaat.Roles = value;
        get => editJemaat.Roles;
    }

    private void handleInput()
    {
        FService.editJemaat<Jemaat>(editJemaat);
        EditorVisible = false;
    }

    protected override void OnInitialized()
    {
        Jemaats = FService.ListAllJemaat.Invoke(null).ToList();
        GridSelect = cm.GetRefRoles();
        Filtered = GridSelect;
        ListKlasifikasi = cm.GetRefMaster("PLYAN").ItemList;
        

    }
    void FilterName()
    {
        Filtered = filterRoleName == String.Empty ? GridSelect : SelectedRoles.Concat(GridSelect.Where(a => a.RoleName.ToUpper().Contains(filterRoleName.ToUpper()))).Distinct().ToList();
    }
    private void Edit(Jemaat edit)
    {
        editJemaat = edit;
        EditorVisible = true;
    }

    private void Delete(Jemaat kill)
    {
        FService.DeleteJemaat(kill);
    }

}
